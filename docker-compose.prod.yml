version: '3.8'

services:
  app:
    build: .
    ports:
      - "80:80"
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/sarangsalgi
      - SPRING_DATASOURCE_USERNAME=sarangsalgi
      - SPRING_DATASOURCE_PASSWORD=sarangsalgi123
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: sarangsalgi
      POSTGRES_USER: sarangsalgi
      POSTGRES_PASSWORD: sarangsalgi123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sarangsalgi"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres_data: